#Checks: '-*,
#bugprone-*,
#cert-dcl21-cpp,
#cert-dcl50-cpp,
#cert-env33-c,
#cert-err34-c,
#cert-err52-cpp,
#cert-err60-cpp,
#cert-flp30-c,
#cert-msc50-cpp,
#cert-msc51-cpp,
#cppcoreguidelines-*,
#-cppcoreguidelines-macro-usage,
#-cppcoreguidelines-pro-type-reinterpret-cast,
#-cppcoreguidelines-pro-type-union-access,
#-cppcoreguidelines-pro-bounds-pointer-arithmetic,
#-cppcoreguidelines-pro-type-vararg,
#google-build-using-namespace,
#google-explicit-constructor,
#google-global-names-in-headers,
#google-readability-casting,
#google-runtime-int,
#google-runtime-operator,
#hicpp-*,
#-hicpp-vararg,
#misc-*,
#modernize-*,
##performance-*,
##readability-*,
#-readability-named-parameter,
#boost-*,
#cert-*,
#clang-analyzer-*,
#clang-diagnostic-*,
#cppcoreguidelines-*,
#portability-*,
#-modernize-use-trailing-return-type,
#-cppcoreguidelines-owning-memory'
##########################################################################
Checks: 'abseil-duration-addition,
abseil-duration-comparison,
abseil-duration-conversion-cast,
abseil-duration-division,
abseil-duration-factory-float,
abseil-duration-factory-scale,
abseil-duration-subtraction,
abseil-duration-unnecessary-conversion,
abseil-faster-strsplit-delimiter,
abseil-no-internal-dependencies,
abseil-no-namespace,
abseil-redundant-strcat-calls,
abseil-str-cat-append,
abseil-string-find-startswith,
abseil-string-find-str-contains,
abseil-time-comparison,
abseil-time-subtraction,
abseil-upgrade-duration-conversions,
#altera-id-dependent-backward-branch,
altera-kernel-name-restriction,
altera-single-work-item-barrier,	 
altera-struct-pack-align,
#altera-unroll-loops,
android-cloexec-accept,
android-cloexec-accept4,
android-cloexec-creat,
android-cloexec-dup,
android-cloexec-epoll-create,
android-cloexec-epoll-create1,	 
android-cloexec-fopen,
android-cloexec-inotify-init,
android-cloexec-inotify-init1,	 
android-cloexec-memfd-create, 
android-cloexec-open,
android-cloexec-pipe,
android-cloexec-pipe2,	 
android-cloexec-socket,	 
android-comparison-in-temp-failure-retry,
boost-use-to-string,
bugprone-argument-comment,
bugprone-assert-side-effect,
bugprone-bad-signal-to-kill-thread,
bugprone-bool-pointer-implicit-conversion,
bugprone-branch-clone,
bugprone-copy-constructor-init,
bugprone-dangling-handle,
bugprone-dynamic-static-initializers,
bugprone-exception-escape,
bugprone-fold-init-type,
bugprone-forward-declaration-namespace,
bugprone-forwarding-reference-overload,	 
bugprone-implicit-widening-of-multiplication-result,
bugprone-inaccurate-erase,
bugprone-incorrect-roundings,
bugprone-infinite-loop,
bugprone-integer-division,
bugprone-lambda-function-name,
bugprone-macro-parentheses,
bugprone-macro-repeated-side-effects,
bugprone-misplaced-operator-in-strlen-in-alloc,
bugprone-misplaced-pointer-arithmetic-in-alloc,
bugprone-misplaced-widening-cast,
bugprone-move-forwarding-reference,
bugprone-multiple-statement-macro,	 
bugprone-no-escape,
bugprone-not-null-terminated-result,
bugprone-parent-virtual-call,
bugprone-posix-return,
bugprone-redundant-branch-condition,
bugprone-reserved-identifier,
bugprone-signal-handler,
bugprone-signed-char-misuse,
bugprone-sizeof-container,
bugprone-sizeof-expression,	 
bugprone-spuriously-wake-up-functions,
bugprone-string-constructor,
bugprone-string-integer-assignment,
bugprone-string-literal-with-embedded-nul,
bugprone-suspicious-enum-usage,
bugprone-suspicious-include,
bugprone-suspicious-memset-usage,
bugprone-suspicious-missing-comma,
bugprone-suspicious-semicolon,
bugprone-suspicious-string-compare,
bugprone-swapped-arguments,
bugprone-terminating-continue,
bugprone-throw-keyword-missing,
bugprone-too-small-loop-variable,
bugprone-undefined-memory-manipulation,
bugprone-undelegated-constructor,
bugprone-unhandled-exception-at-new,
bugprone-unhandled-self-assignment, 
bugprone-unused-raii,
bugprone-unused-return-value,
bugprone-use-after-move,
bugprone-virtual-near-miss,
cert-dcl21-cpp,
cert-dcl50-cpp,
cert-dcl58-cpp,
cert-env33-c,
cert-err34-c,
cert-err52-cpp,
cert-err58-cpp, # keep this
cert-err60-cpp,
cert-flp30-c,
cert-mem57-cpp,
cert-msc50-cpp,
cert-msc51-cpp,
cert-oop57-cpp,
cert-oop58-cpp,
clang-analyzer-core.DynamicTypePropagation,
clang-analyzer-core.uninitialized.CapturedBlockVariable,
clang-analyzer-cplusplus.InnerPointer,
clang-analyzer-nullability.NullableReturnedFromNonnull,
clang-analyzer-optin.osx.OSObjectCStyleCast,
clang-analyzer-optin.performance.GCDAntipattern,
clang-analyzer-optin.performance.Padding,
clang-analyzer-optin.portability.UnixAPI,
clang-analyzer-osx.MIG,
clang-analyzer-osx.NumberObjectConversion,
clang-analyzer-osx.OSObjectRetainCount,
clang-analyzer-osx.ObjCProperty,
clang-analyzer-osx.cocoa.AutoreleaseWrite,
clang-analyzer-osx.cocoa.Loops,
clang-analyzer-osx.cocoa.MissingSuperCall,
clang-analyzer-osx.cocoa.NonNilReturnValue,
clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak,
clang-analyzer-valist.CopyToSelf,
clang-analyzer-valist.Uninitialized,
clang-analyzer-valist.Unterminated,
concurrency-mt-unsafe,
concurrency-thread-canceltype-asynchronous,
cppcoreguidelines-avoid-goto,
cppcoreguidelines-avoid-non-const-global-variables,
cppcoreguidelines-init-variables, # keep this
cppcoreguidelines-interfaces-global-init,
cppcoreguidelines-macro-usage,
cppcoreguidelines-narrowing-conversions,
cppcoreguidelines-no-malloc,
cppcoreguidelines-owning-memory, # keep this
cppcoreguidelines-prefer-member-initializer, # keep this
cppcoreguidelines-pro-bounds-array-to-pointer-decay,
cppcoreguidelines-pro-bounds-constant-array-index,
cppcoreguidelines-pro-bounds-pointer-arithmetic,
cppcoreguidelines-pro-type-const-cast,
cppcoreguidelines-pro-type-cstyle-cast,
cppcoreguidelines-pro-type-member-init, # keep this
cppcoreguidelines-pro-type-reinterpret-cast,
cppcoreguidelines-pro-type-static-cast-downcast,
cppcoreguidelines-pro-type-union-access,
cppcoreguidelines-pro-type-vararg,
cppcoreguidelines-slicing,
cppcoreguidelines-special-member-functions, # keep this
darwin-avoid-spinlock,
darwin-dispatch-once-nonstatic,
#fuchsia-default-arguments-calls,
fuchsia-default-arguments-declarations,
fuchsia-multiple-inheritance,
fuchsia-overloaded-operator,
fuchsia-statically-constructed-objects,
fuchsia-trailing-return,
fuchsia-virtual-inheritance,
google-build-explicit-make-pair,
google-build-namespaces,
#google-build-using-namespace,
google-default-arguments,
google-explicit-constructor,
google-global-names-in-headers, # keep this
google-objc-avoid-nsobject-new,	 
google-objc-avoid-throwing-exception,
google-objc-function-naming, # keep this
google-objc-global-variable-declaration,
google-readability-avoid-underscore-in-googletest-name, # keep this
google-readability-casting,
#google-readability-todo,
google-runtime-int,
google-runtime-operator,
google-upgrade-googletest-case,
hicpp-avoid-goto,
hicpp-exception-baseclass,
hicpp-multiway-paths-covered,
hicpp-no-assembler,
hicpp-signed-bitwise,
linuxkernel-must-use-errs,
llvm-header-guard,
llvm-include-order, # keep this
llvm-namespace-comment, 
llvm-prefer-isa-or-dyn-cast-in-conditionals,
llvm-prefer-register-over-unsigned,
llvm-twine-local,
#llvmlibc-callee-namespace,
#llvmlibc-implementation-in-namespace,
#llvmlibc-restrict-system-libc-headers,
misc-definitions-in-headers,
misc-misplaced-const,
misc-new-delete-overloads,
#misc-no-recursion,
misc-non-copyable-objects,
misc-non-private-member-variables-in-classes,
misc-redundant-expression,
misc-static-assert,
misc-throw-by-value-catch-by-reference,
misc-unconventional-assign-operator,
misc-uniqueptr-reset-release,
misc-unused-alias-decls,
misc-unused-parameters,
misc-unused-using-decls, # keep this
modernize-avoid-bind,
modernize-avoid-c-arrays,
modernize-concat-nested-namespaces,
modernize-deprecated-headers, # keep this
modernize-deprecated-ios-base-aliases,
modernize-loop-convert,
modernize-make-shared,
modernize-make-unique,
modernize-pass-by-value,
modernize-raw-string-literal,
modernize-redundant-void-arg,
modernize-replace-auto-ptr,
modernize-replace-disallow-copy-and-assign-macro,
modernize-replace-random-shuffle,
modernize-return-braced-init-list,
modernize-shrink-to-fit,
modernize-unary-static-assert,
modernize-use-auto,
modernize-use-bool-literals,
modernize-use-default-member-init,
modernize-use-emplace,
modernize-use-equals-default, # keep this
modernize-use-equals-delete, # keep this
modernize-use-nodiscard,
modernize-use-noexcept,
modernize-use-nullptr,
modernize-use-override,
#modernize-use-trailing-return-type, # maybe keep
modernize-use-transparent-functors,
modernize-use-uncaught-exceptions,
modernize-use-using,
mpi-buffer-deref,
mpi-type-mismatch,
objc-avoid-nserror-init,
objc-dealloc-in-category,
objc-forbidden-subclassing,
objc-missing-hash,
objc-nsinvocation-argument-lifetime,
objc-property-declaration,
objc-super-self,
openmp-exception-escape,
openmp-use-default-none,
performance-faster-string-find,
performance-for-range-copy, # keep this
performance-implicit-conversion-in-loop,
performance-inefficient-algorithm,
performance-inefficient-string-concatenation,
performance-inefficient-vector-operation,
performance-move-const-arg,
performance-move-constructor-init,
performance-no-automatic-move,
performance-no-int-to-ptr,
performance-noexcept-move-constructor,
performance-trivially-destructible,
performance-type-promotion-in-math-fn,
performance-unnecessary-copy-initialization,
#performance-unnecessary-value-param, # maybe
portability-restrict-system-includes,
portability-simd-intrinsics,
readability-avoid-const-params-in-decls, # keep this
readability-braces-around-statements,
readability-const-return-type,
readability-container-size-empty, # keep this
readability-convert-member-functions-to-static,
readability-delete-null-pointer,
readability-else-after-return, # keep this
readability-function-cognitive-complexity, # keep this
readability-function-size,
readability-identifier-naming,
readability-implicit-bool-conversion,
readability-inconsistent-declaration-parameter-name, # keep this
readability-isolate-declaration,
readability-magic-numbers, # keep this
readability-make-member-function-const,
readability-misleading-indentation,
readability-misplaced-array-index,
readability-named-parameter,
readability-non-const-parameter,
readability-qualified-auto,
readability-redundant-access-specifiers,
readability-redundant-control-flow,
readability-redundant-declaration,
readability-redundant-function-ptr-dereference,
readability-redundant-member-init,
readability-redundant-preprocessor	 
readability-redundant-smartptr-get,
readability-redundant-string-cstr,
readability-redundant-string-init,
readability-simplify-boolean-expr,
readability-simplify-subscript-expr,
readability-static-accessed-through-instance, # keep this
readability-static-definition-in-anonymous-namespace,
readability-string-compare,
readability-uniqueptr-delete-release,
readability-uppercase-literal-suffix,
#readability-use-anyofallof, # maybe keep
zircon-temporary-objects,
// TODO unnecessary includes
// TODO unnecessary usings
// TODO no single line ifs and fors
##########################################################################
--suggest-missing-includes,
--header-insertion=iwyu,
-log=verbose, 
-pretty, 
--background-index'
##########################################################################
CheckOptions:
    - key: bugprone-argument-comment.StrictMode
      value: 1
    - key: bugprone-exception-escape.FunctionsThatShouldNotThrow
      value: WinMain,SDL_main
    - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
      value: 1
FormatStyle: 'file'
